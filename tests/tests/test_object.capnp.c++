// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: test.capnp

#include "test_object.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_a531aa1edfa77f45 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69, 127, 167, 223,  30, 170,  49, 165,
     18,   0,   0,   0,   1,   0,   1,   0,
    242,  19, 108, 223, 241,  82, 205, 229,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 101, 109,  97,  47, 116,
    101, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  66, 108, 111,  99, 107,  84,
    111, 112, 111, 108, 111, 103, 121,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a531aa1edfa77f45 = b_a531aa1edfa77f45.words;
#if !CAPNP_LITE
static const uint16_t m_a531aa1edfa77f45[] = {0, 1};
static const uint16_t i_a531aa1edfa77f45[] = {0, 1};
const ::capnp::_::RawSchema s_a531aa1edfa77f45 = {
  0xa531aa1edfa77f45, b_a531aa1edfa77f45.words, 48, nullptr, m_a531aa1edfa77f45,
  0, 2, i_a531aa1edfa77f45, nullptr, nullptr, { &s_a531aa1edfa77f45, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ExceptionTestObject
constexpr uint16_t ExceptionTestObject::_capnpPrivate::dataWordSize;
constexpr uint16_t ExceptionTestObject::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ExceptionTestObject::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ExceptionTestObject::_capnpPrivate::schema;
#endif  // !CAPNP_LITE
